AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: >
    Sub template for Lambda Functions
Globals:
    Function:
        Runtime: dotnet6
        MemorySize: 2048
        Timeout: 60
        Tags:
            stream: "vs-stockcarlocator"

Parameters:
    StackName:
        Type: String
        Description: The name of the CloudFormation stack.
        Default: "sam-my-fav-stocks"
    Stage:
        Type: String
        Description: The stage name.
        Default: "stage"
    MyFavStocksCacheTableArn:
        Type: String
        Description: "ARN of the Cache Table"

Resources:
    ScrapStockValues:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub "${StackName}-ScrapStockValues"
            Handler: LambdaFunctions::LambdaFunctions.Functions.StockScraperFunc::ScrapStockValues
            Description: The description of your function.
            CodeUri: bin/release/net6.0/LambdaFunctions.zip
            Role: !GetAtt ScrapStockValuesRole.Arn
            Events:
                ScrapStockValuesScheduleEvent:
                    Type: Schedule
                    Properties:
                        Schedule: "rate(5 minutes)" # Every 5 minutes
                        Name: !Sub "${StackName}-scrapStock-values-schedule"
                        Description: "Triggers ScrapStockValues Lambda every 5 minutes."
                        Enabled: true

    ScrapStockValuesLogGroup:
        Type: AWS::Logs::LogGroup
        Properties:
            LogGroupName: !Sub "/aws/lambda/${StackName}-ScrapStockValues"
            RetentionInDays: 14

    ScrapStockValuesPermissionForEvents:
        Type: AWS::Lambda::Permission
        Properties:
            FunctionName: !GetAtt ScrapStockValues.Arn # Lambda function ARN
            Action: lambda:InvokeFunction
            Principal: events.amazonaws.com # Allow CloudWatch Events to invoke the function
            SourceArn: !Sub "arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/${StackName}-scrapStock-values-schedule"

    CommonLambdaPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: Allow
                      Action:
                          - lambda:InvokeFunction
                      Resource: "*"
                    - Effect: Allow
                      Action:
                          - dynamodb:ConditionCheck
                          - dynamodb:DescribeTable
                          - dynamodb:GetItem
                          - dynamodb:GetRecords
                          - dynamodb:ListTables
                          - dynamodb:Query
                          - dynamodb:UpdateItem
                          - dynamodb:UpdateTable
                      Resource: !Ref MyFavStocksCacheTableArn

    ScrapStockValuesRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: !Sub "${StackName}-role-scrapStockValues"
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: Allow
                      Principal:
                          Service: lambda.amazonaws.com
                      Action: sts:AssumeRole
            ManagedPolicyArns:
                - !Ref CommonLambdaPolicy
            Policies:
                - PolicyName: ScrapStockValuesPolicy
                  PolicyDocument:
                      Version: "2012-10-17"
                      Statement:
                          - Effect: Allow
                            Action:
                                - logs:CreateLogGroup
                                - logs:CreateLogStream
                                - logs:PutLogEvents
                            Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${StackName}-ScrapStockValues:*"
                - PolicyName: ScrapStockValuesS3AccessPolicy
                  PolicyDocument:
                      Version: "2012-10-17"
                      Statement:
                          - Effect: Allow
                            Action:
                                - s3:PutObject
                                - s3:GetObject
                                - s3:ListBucket
                            Resource:
                                - !Sub "arn:aws:s3:::stocks-index"
                                - !Sub "arn:aws:s3:::stocks-index/*"
